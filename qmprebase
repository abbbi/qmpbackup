#!/usr/bin/env python3
"""
 qmpbackup: Full an incremental backup using Qemus
 dirty bitmap feature

 Copyright (C) 2022  Michael Ablassmeier

 Authors:
  Michael Ablassmeier <abi@grinser.de>

 This work is licensed under the terms of the GNU GPL, version 3.  See
 the LICENSE file in the top-level directory.
"""
import sys
import argparse
from libqmpbackup import version
from libqmpbackup.lib import QmpBackup

parser = argparse.ArgumentParser(prog=sys.argv[0])
subparsers = parser.add_subparsers(help="sub-command help")
parser_rebase = subparsers.add_parser("rebase", help="rebase")
parser_rebase.set_defaults(which="rebase")
parser_rebase.add_argument(
    "--dir", type=str, help="directory which contains images", required=True
)
parser_rebase.add_argument(
    "--dry-run",
    action="store_true",
    help="do not run commands, only show them",
    required=False,
)
parser_rebase.add_argument(
    "--until",
    type=str,
    help="point in time restore until specified backup file",
    required=False,
)
argv = parser.parse_args()
try:
    action = argv.which
except AttributeError:
    parser.print_help()
    sys.exit(1)

common = QmpBackup(False)
log = common.setup_log()

log.info("Version: %s Arguments: %s", version.VERSION, " ".join(sys.argv))

if action == "rebase":
    if common.rebase(argv.dir, argv.dry_run, argv.until):
        log.info("Image files rollback successful.")
        sys.exit(0)
    sys.exit(1)
